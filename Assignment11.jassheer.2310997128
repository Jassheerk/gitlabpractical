#include <iostream>
using namespace std;

class Matrix {
private:
    int data[3][3];

public:
    Matrix() {
       
        for (int i = 0; i < 3; ++i) {
            for (int j = 0; j < 3; ++j) {
                data[i][j] = 0;
            }
        }
    }

        Matrix operator+(const Matrix& other) {
        Matrix result;
        for (int i = 0; i < 3; ++i) {
            for (int j = 0; j < 3; ++j) {
                result.data[i][j] = this->data[i][j] + other.data[i][j];
            }
        }
        return result;
    }


    friend ostream& operator<<(ostream& os, const Matrix& matrix);

      void setValue(int row, int col, int value) {
        if (row >= 0 && row < 3 && col >= 0 && col < 3) {
            data[row][col] = value;
        }
    }
};

ostream& operator<<(ostream& os, const Matrix& matrix) {
    for (int i = 0; i < 3; ++i) {
        for (int j = 0; j < 3; ++j) {
            os << matrix.data[i][j] << " ";
        }
        os << endl;
    }
    return os;
}

int main() {
    Matrix obj1, obj2, obj3;

  
    obj1.setValue(0, 0, 1);
    obj1.setValue(0, 1, 2);
    obj1.setValue(0, 2, 3);
    obj1.setValue(1, 0, 4);
    obj1.setValue(1, 1, 5);
    obj1.setValue(1, 2, 6);
    obj1.setValue(2, 0, 7);
    obj1.setValue(2, 1, 8);
    obj1.setValue(2, 2, 9);

    obj2.setValue(0, 0, 9);
    obj2.setValue(0, 1, 8);
    obj2.setValue(0, 2, 7);
    obj2.setValue(1, 0, 6);
    obj2.setValue(1, 1, 5);
    obj2.setValue(1, 2, 4);
    obj2.setValue(2, 0, 3);
    obj2.setValue(2, 1, 2);
    obj2.setValue(2, 2, 1);

       obj3 = obj1 + obj2;

    
    cout << "Sum of matrices: \n" << obj3;

    return 0;
}
